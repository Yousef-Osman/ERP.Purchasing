services:
  # erp.purchasing.api:
  #   image: ${DOCKER_REGISTRY-}erppurchasingapi
  #   build:
  #     context: .
  #     dockerfile: src/ERP.Purchasing.API/Dockerfile

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: erp-rabbitmq
        ports:
          - "5672:5672"   # AMQP port
          - "15672:15672" # Management UI
        environment:
          - RABBITMQ_DEFAULT_USER=guest
          - RABBITMQ_DEFAULT_PASS=guest
        volumes:
          - rabbitmq-data:/var/lib/rabbitmq
        networks:
          - erp-network

    redis:
        image: redis:7-alpine
        container_name: erp-redis
        restart: unless-stopped
        ports:
          - "6379:6379"
        volumes:
          - redis-data:/data
        networks:
          - erp-network

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
        ports:
            - "9200:9200"
        volumes: 
            - elastic-data:/usr/share/elasticsearch/data_18.6.1
        environment:
            - discovery.type="single-node"
            - xpack.security.enabled=false
            - xpack.security.transport.ssl.enabled=false
        networks:
            - erp-network
        
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:8.16.1
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        environment:
            - ELASTICSEARCH_URL=http://localhost:9200
        networks:
            - erp-network

networks:
  erp-network:
    name: erp-network

volumes:
  rabbitmq-data:
  elastic-data:
  redis-data:  
  